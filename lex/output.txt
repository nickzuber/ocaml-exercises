
 ( 1 + ( 2 + 3 ) + 4 ) + 5
env = {
  state = REGULAR, 
  exprs = [ [ ] ]
  ast = [ ]
}

env = {
  state = STARTING_EXPR, REGULAR, 
  exprs = [ [ ] ]
  ast = [ ]
}

env = {
  state = INSIDE_EXPR, STARTING_EXPR, REGULAR, 
  exprs = [ [ INT(1); ] ]
  ast = [ ]
}

env = {
  state = INSIDE_EXPR, STARTING_EXPR, REGULAR, 
  exprs = [ [ INT(1); PLUS; ] ]
  ast = [ ]
}

env = {
  state = STARTING_EXPR, INSIDE_EXPR, STARTING_EXPR, REGULAR, 
  exprs = [ [ ][ INT(1); PLUS; ] ]
  ast = [ ]
}

env = {
  state = INSIDE_EXPR, STARTING_EXPR, INSIDE_EXPR, STARTING_EXPR, REGULAR, 
  exprs = [ [ INT(2); ][ INT(1); PLUS; ] ]
  ast = [ ]
}

env = {
  state = INSIDE_EXPR, STARTING_EXPR, INSIDE_EXPR, STARTING_EXPR, REGULAR, 
  exprs = [ [ INT(2); PLUS; ][ INT(1); PLUS; ] ]
  ast = [ ]
}

env = {
  state = INSIDE_EXPR, STARTING_EXPR, INSIDE_EXPR, STARTING_EXPR, REGULAR, 
  exprs = [ [ INT(2); PLUS; INT(3); ][ INT(1); PLUS; ] ]
  ast = [ ]
}

=== CONSUMING EXPR ===
env = {
  state = INSIDE_EXPR, ENDING_EXPR, INSIDE_EXPR, STARTING_EXPR, INSIDE_EXPR, STARTING_EXPR, REGULAR, 
  exprs = [ [ INT(1); PLUS; EXPR( INT(2); PLUS; INT(3); ); ] ]
  ast = [ ]
}

env = {
  state = INSIDE_EXPR, ENDING_EXPR, INSIDE_EXPR, STARTING_EXPR, INSIDE_EXPR, STARTING_EXPR, REGULAR, 
  exprs = [ [ INT(1); PLUS; EXPR( INT(2); PLUS; INT(3); ); PLUS; ] ]
  ast = [ ]
}

env = {
  state = INSIDE_EXPR, ENDING_EXPR, INSIDE_EXPR, STARTING_EXPR, INSIDE_EXPR, STARTING_EXPR, REGULAR, 
  exprs = [ [ INT(1); PLUS; EXPR( INT(2); PLUS; INT(3); ); PLUS; INT(4); ] ]
  ast = [ ]
}

=== CONSUMING EXPR ===
env = {
  state = REGULAR, ENDING_EXPR, INSIDE_EXPR, ENDING_EXPR, INSIDE_EXPR, STARTING_EXPR, INSIDE_EXPR, STARTING_EXPR, REGULAR, 
  exprs = [ [ ] ]
  ast = [ EXPR( INT(1); PLUS; EXPR( INT(2); PLUS; INT(3); ); PLUS; INT(4); ); ]
}

env = {
  state = REGULAR, ENDING_EXPR, INSIDE_EXPR, ENDING_EXPR, INSIDE_EXPR, STARTING_EXPR, INSIDE_EXPR, STARTING_EXPR, REGULAR, 
  exprs = [ [ ] ]
  ast = [ EXPR( INT(1); PLUS; EXPR( INT(2); PLUS; INT(3); ); PLUS; INT(4); ); PLUS; ]
}

[ EXPR( INT(1); PLUS; EXPR( INT(2); PLUS; INT(3); ); PLUS; INT(4); ); PLUS; INT(5); EOL; ] 

